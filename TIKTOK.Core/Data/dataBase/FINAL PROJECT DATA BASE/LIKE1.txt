Create Table LIKE1(
 ID NUMBER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT PK_LIKE1 PRIMARY Key,
 userid NUMBER CONSTRAINT FK_LIKE_USERID REFERENCES USER1(ID) ON DELETE CASCADE,
 videoid NUMBER CONSTRAINT FK_video_LIKE REFERENCES video(ID) ON DELETE CASCADE,
 createat date,
 CONSTRAINT UN_LIKE1 UNIQUE(userid,videoid)
);

CREATE OR REPLACE PACKAGE  LIKE1_PACKAGE AS

    PROCEDURE LIKE1_CRUD(P_ACTION in varchar DEFAULT NULL 
    ,P_ID IN NUMBER DEFAULT NULL
    ,P_userid IN NUMBER DEFAULT NULL
    ,P_videoid IN NUMBER DEFAULT NULL
    ,P_createat IN DATE DEFAULT NULL );
    
End LIKE1_PACKAGE;



CREATE OR REPLACE PACKAGE BODY LIKE1_PACKAGE AS
    
    PROCEDURE LIKE1_CRUD(P_ACTION in varchar DEFAULT NULL 
    ,P_ID IN NUMBER DEFAULT NULL
    ,P_userid IN NUMBER DEFAULT NULL
    ,P_videoid IN NUMBER DEFAULT NULL
    ,P_createat IN DATE DEFAULT NULL )
    IS
        like_all SYS_REFCURSOR;
    BEGIN
        EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT=''DD-MON-YYYY HH24:MI:SS''';
        IF P_ACTION = 'INSERT' THEN
            INSERT INTO LIKE1 VALUES(DEFAULT,P_userid,P_videoid,To_DATE(P_createat,'DD-MM-YYYY HH24:MI:SS')); 
            COMMIT;
        ELSIF P_ACTION = 'UPDATE' THEN

            UPDATE LIKE1 SET
                USERID = P_userid ,
                VIDEOID = P_videoid ,
                CREATEAT = To_DATE(P_createat,'DD-MM-YYYY HH24:MI:SS')
            WHERE ID = P_ID;
            COMMIT;

        ELSIF P_ACTION = 'DELETE' THEN
            DELETE LIKE1 WHERE ID = P_ID;
            COMMIT;

        ELSIF P_ACTION = 'GETALL' THEN
            OPEN like_all FOR SELECT * FROM LIKE1;
            dbms_sql.return_result(like_all);

        ELSIF P_ACTION = 'GETBYID' THEN
            OPEN like_all FOR SELECT * FROM LIKE1 WHERE ID = P_ID;
            dbms_sql.return_result(like_all); 
        END IF;
    END LIKE1_CRUD;

END LIKE1_PACKAGE;